import { AREAS, ITEM_ACTION_TYPE, ITEM_TYPE } from "../Constants";
import {
  Button,
  Checkbox,
  DatePicker,
  Form,
  Input,
  Layout,
  PageHeader,
  Radio,
  Row,
  Typography,
  Upload,
} from "antd";

import AnimatedContainer from "../components/AnimatedContainer";
import { CreateOrderRequest } from "../services/types";
import Head from "next/head";
import HeaderComponent from "../components/Header";
import { InboxOutlined } from "@ant-design/icons";
import React from "react";
import { createOrder } from "../services/ordem";
import styles from "../../styles/CreateOffer.module.css";
import { useRouter } from "next/router";

const { Content } = Layout;

const routes = [
  {
    path: "/",
    breadcrumbName: "Início",
  },
  {
    path: "/catalogo",
    breadcrumbName: "Catálogo",
  },
  {
    path: "/criar-oferta",
    breadcrumbName: "Ofertar um item",
  },
];

type formValues = {
  item: {

    item: string;
    descricao: string;
    acao: ITEM_ACTION_TYPE;
    tipo: ITEM_TYPE;
    data_validade: moment.Moment;
    emprestimo: boolean;
    area_conhecimento: AREAS;
    quantidade: string;
    id_usuario: 0;
  }
};

const CreateOffer = () => {
  const router = useRouter();
  const [form] = Form.useForm();
  const onBack = () => {
    router.back();
  };

  const normFile = (e: any) => {
    console.log("Upload event:", e);
    if (Array.isArray(e)) {
      return e;
    }
    return e && e.fileList;
  };

  const handleCreateOffer = async (values: formValues) => {
    const {item} = values;
    const newIsumoData: CreateOrderRequest = {
      order: {
        acao: item.acao,
        area_conhecimento: item.area_conhecimento,
        data_validade: item?.data_validade.format('YYYY-MM-DD') || "",
        descricao: item.descricao,
        emprestimo: item.emprestimo,
        tipo: item.tipo,
        item: item.item,
        quantidade: item.quantidade,
        id_usuario: 7,
      }
    }

    await createOrder(newIsumoData)
  };

  return (
    <AnimatedContainer>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Layout>
        <HeaderComponent />
        <div style={{ padding: "0px 160px", height: "100vh" }}>
          <PageHeader
            className={styles.create_offer_page_header}
            onBack={onBack}
            breadcrumb={{ routes }}
            title={"Catálogo"}
          />
          <Layout className={styles.main}>
            <Layout>
              <Content>
                <Form
                  className={styles.form}
                  layout="vertical"
                  onFinish={handleCreateOffer}
                  form={form}
                >
                  <Form.Item hidden name={["item", "acao"]} initialValue="O" />
                  <div className={styles.column}>
                    <Form.Item
                      label="Nome do item"
                      name={["item", "item"]}
                      style={{ flex: 1, paddingRight: 8 }}
                    >
                      <Input placeholder="O que você está oferecendo?" />
                    </Form.Item>
                    <Form.Item
                      name={["item", "descricao"]}
                      label="Descrição do anúncio"
                    >
                      <Input.TextArea
                        rows={10}
                        style={{ width: "100%" }}
                        placeholder="Digite a descrição de seu anúncio"
                      />
                    </Form.Item>
                    <div style={{ width: 405, marginTop: 8 }}>
                      <Typography.Text style={{ textAlign: "left" }}>
                        Atenção: Não adicione seus dados de contato à descrição
                        pública do anúncio. Ao invés disso, adicione uma forma
                        de contato ao seu perfil de usuário.
                      </Typography.Text>
                    </div>
                  </div>
                  <div className={styles.column}>
                    <Form.Item label="Imagem">
                      <Form.Item
                        name={["item", "image"]}
                        valuePropName="fileList"
                        getValueFromEvent={normFile}
                        noStyle
                      >
                        <Upload.Dragger name="files">
                          <p className="ant-upload-drag-icon">
                            <InboxOutlined style={{ color: "#08979C" }} />
                          </p>
                          <p className="ant-upload-text">
                            Arraste uma imagem aqui
                          </p>
                          <p className="ant-upload-hint">
                            Isso pode dar mais visibilidade a ele e ajudar ainda
                            mais quem está procurando por este item.
                          </p>
                        </Upload.Dragger>
                      </Form.Item>
                    </Form.Item>
                    <Row>
                      <Form.Item
                        label="Quantidade"
                        name={["item", "quantidade"]}
                        style={{ flex: 1, paddingRight: 8 }}
                      >
                        <Input placeholder="Digite a quantidade com unidade: 1, 2..." />
                      </Form.Item>
                      <Form.Item
                        label="Data de validade"
                        name={["item", "data_validade"]}
                        style={{
                          flex: 1,
                          width: "width: -webkit-fill-available",
                        }}
                      >
                        <DatePicker placeholder="Selecione a data de validade" />
                      </Form.Item>
                    </Row>
                    <Form.Item name={["item", "tipo"]} label="Tipo de item">
                      <Radio.Group>
                        <Radio value="I">Insumo</Radio>
                        <Radio value="L">Livro</Radio>
                      </Radio.Group>
                    </Form.Item>
                    <Form.Item
                      name={["item", "area_conhecimento"]}
                      label="Área do conhecimento"
                    >
                      <Radio.Group>
                        <Radio value={AREAS.BIOLOGICAS}>
                          {AREAS.BIOLOGICAS}
                        </Radio>
                        <Radio value={AREAS.EXATAS}>{AREAS.EXATAS}</Radio>
                        <Radio value={AREAS.HUMANAS}>{AREAS.HUMANAS}</Radio>
                        <Radio value={AREAS.TECNOLOGIAS}>
                          {AREAS.TECNOLOGIAS}
                        </Radio>
                      </Radio.Group>
                    </Form.Item>
                    <Form.Item
                      name={["item", "emprestimo"]}
                      valuePropName="checked"
                      label="Condição da oferta"
                      noStyle
                    >
                      <Checkbox>Disponível para empréstimo</Checkbox>
                    </Form.Item>
                    <Row
                      justify="end"
                      style={{ padding: 8, marginTop: 16 }}
                      align="bottom"
                    >
                      <Button style={{ marginRight: 10 }} type="default" onClick={() => router.back()}>
                        Cancelar
                      </Button>
                      <Button className={styles.button} htmlType="submit">
                        Salvar e anunciar
                      </Button>
                    </Row>
                  </div>
                </Form>
              </Content>
            </Layout>
          </Layout>
        </div>
      </Layout>
    </AnimatedContainer>
  );
};

export default CreateOffer;
